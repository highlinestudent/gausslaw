{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:////Users/mac/Downloads/Highline/Physics202/projects/gausslaw2d/js/mathjax/components/src/core/lib/components/global.js","webpack:////Users/mac/Downloads/Highline/Physics202/projects/gausslaw2d/js/mathjax/js/input/tex/mhchem/MhchemConfiguration.js","webpack:////Users/mac/Downloads/Highline/Physics202/projects/gausslaw2d/js/mathjax/components/src/input/tex-base/lib/input/tex/Configuration.js","webpack:////Users/mac/Downloads/Highline/Physics202/projects/gausslaw2d/js/mathjax/components/src/input/tex-base/lib/input/tex/SymbolMap.js","webpack:////Users/mac/Downloads/Highline/Physics202/projects/gausslaw2d/js/mathjax/components/src/input/tex-base/lib/input/tex/TexError.js","webpack:////Users/mac/Downloads/Highline/Physics202/projects/gausslaw2d/js/mathjax/components/src/input/tex-base/lib/input/tex/base/BaseMethods.js","webpack:///../ams/lib/input/tex/ams/AmsMethods.js","webpack:////Users/mac/Downloads/Highline/Physics202/projects/gausslaw2d/js/mathjax/js/input/tex/mhchem/mhchem_parser.js","webpack:///./lib/mhchem.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","isObject","MathJax","_","components","global","combineConfig","combineDefaults","combineWithMathJax","Configuration_js_1","SymbolMap_js_1","TexError_js_1","BaseMethods_js_1","AmsMethods_js_1","mhchem_parser_js_1","MhchemMethods","Macro","default","xArrow","Machine","parser","machine","arg","GetArgument","data","mhchemParser","go","tex","texify","string","substr","err","slice","CommandMap","ce","pu","longrightleftharpoons","longRightleftharpoons","longLeftrightharpoons","longleftrightarrows","tripledash","xrightarrow","xleftarrow","xleftrightarrow","xrightleftharpoons","xRightleftharpoons","xLeftrightharpoons","MhchemConfiguration","Configuration","handler","macro","input","ConfigurationHandler","AbstractSymbolMap","SymbolMap","RegExpMap","AbstractParseMap","CharacterMap","DelimiterMap","MacroMap","EnvironmentMap","TexError","base","BaseMethods","ams","AmsMethods","stateMachine","undefined","lastInput","state","buffer","replace","watchdog","output","stateMachines","transitions","iterateTransitions","length","matches","patterns","match_","pattern","task","iA","action_","actions","type_","option","concatArray","nextState","revisit","remainder","toContinue","a","b","Array","isArray","iB","push","match","splice","findObserveGroups","'","this","begExcl","begIncl","endIncl","endExcl","beg2Excl","beg2Incl","end2Incl","end2Excl","combine","_match","indexOf","e","endChars","braces","charAt","endMatchBegin","endMatchEnd","_findObserveGroups","match1","substring","group2","matchRet","join","q","rm","text_","p1","p2","ret","k","kind_","color","createTransitions","stateArray","split","concat","patternArray","j","tmp","dType","isAfterD","c1","c2","c3","c4","hyphenFollows","sb","entityFollows","rd","rq","rdt","rqt","color1","color2","trim","md","mq","b5","mrm","reverse","isInner","res","cee","inputi","_go2","_goInner","buf","_getBond","b6","arrow","_getArrow","_getOperator","assertNever","assertString","mhchem","module1"],"mappings":"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","file":"mhchem.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","\"use strict\";\nObject.defineProperty(exports, '__esModule', {value: true});\nexports.isObject = MathJax._.components.global.isObject;\nexports.combineConfig = MathJax._.components.global.combineConfig;\nexports.combineDefaults = MathJax._.components.global.combineDefaults;\nexports.combineWithMathJax = MathJax._.components.global.combineWithMathJax;\nexports.MathJax = MathJax._.components.global.MathJax;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Configuration_js_1 = require(\"../Configuration.js\");\nvar SymbolMap_js_1 = require(\"../SymbolMap.js\");\nvar TexError_js_1 = require(\"../TexError.js\");\nvar BaseMethods_js_1 = require(\"../base/BaseMethods.js\");\nvar AmsMethods_js_1 = require(\"../ams/AmsMethods.js\");\nvar mhchem_parser_js_1 = require(\"./mhchem_parser.js\");\nvar MhchemMethods = {};\nMhchemMethods.Macro = BaseMethods_js_1.default.Macro;\nMhchemMethods.xArrow = AmsMethods_js_1.default.xArrow;\nMhchemMethods.Machine = function (parser, name, machine) {\n    try {\n        var arg = parser.GetArgument(name);\n        var data = mhchem_parser_js_1.mhchemParser.go(arg, machine);\n        var tex = mhchem_parser_js_1.texify.go(data);\n        parser.string = tex + parser.string.substr(parser.i);\n        parser.i = 0;\n    }\n    catch (err) {\n        throw new TexError_js_1.default(err[0], err[1], err.slice(2));\n    }\n};\nnew SymbolMap_js_1.CommandMap('mhchem', { ce: ['Machine', 'ce'],\n    pu: ['Machine', 'pu'],\n    longrightleftharpoons: ['Macro',\n        '\\\\stackrel{\\\\textstyle{-}\\\\!\\\\!{\\\\rightharpoonup}}{\\\\smash{{\\\\leftharpoondown}\\\\!\\\\!{-}}}'],\n    longRightleftharpoons: ['Macro',\n        '\\\\stackrel{\\\\textstyle{-}\\\\!\\\\!{\\\\rightharpoonup}}{\\\\smash{\\\\leftharpoondown}}'],\n    longLeftrightharpoons: ['Macro',\n        '\\\\stackrel{\\\\textstyle\\\\vphantom{{-}}{\\\\rightharpoonup}}{\\\\smash{{\\\\leftharpoondown}\\\\!\\\\!{-}}}'],\n    longleftrightarrows: ['Macro',\n        '\\\\stackrel{\\\\longrightarrow}{\\\\smash{\\\\longleftarrow}\\\\Rule{0px}{.25em}{0px}}'],\n    tripledash: ['Macro',\n        '\\\\vphantom{-}\\\\raise2mu{\\\\kern2mu\\\\tiny\\\\text{-}\\\\kern1mu\\\\text{-}\\\\kern1mu\\\\text{-}\\\\kern2mu}'],\n    xrightarrow: ['xArrow', 0x2192, 5, 6],\n    xleftarrow: ['xArrow', 0x2190, 7, 3],\n    xleftrightarrow: ['xArrow', 0x2194, 6, 6],\n    xrightleftharpoons: ['xArrow', 0x21CC, 5, 7],\n    xRightleftharpoons: ['xArrow', 0x21CC, 5, 7],\n    xLeftrightharpoons: ['xArrow', 0x21CC, 5, 7]\n}, MhchemMethods);\nexports.MhchemConfiguration = Configuration_js_1.Configuration.create('mhchem', { handler: { macro: ['mhchem'] } });\n//# sourceMappingURL=MhchemConfiguration.js.map","\"use strict\";\nObject.defineProperty(exports, '__esModule', {value: true});\nexports.Configuration = MathJax._.input.tex.Configuration.Configuration;\nexports.ConfigurationHandler = MathJax._.input.tex.Configuration.ConfigurationHandler;\n","\"use strict\";\nObject.defineProperty(exports, '__esModule', {value: true});\nexports.AbstractSymbolMap = MathJax._.input.tex.SymbolMap.AbstractSymbolMap;\nexports.RegExpMap = MathJax._.input.tex.SymbolMap.RegExpMap;\nexports.AbstractParseMap = MathJax._.input.tex.SymbolMap.AbstractParseMap;\nexports.CharacterMap = MathJax._.input.tex.SymbolMap.CharacterMap;\nexports.DelimiterMap = MathJax._.input.tex.SymbolMap.DelimiterMap;\nexports.MacroMap = MathJax._.input.tex.SymbolMap.MacroMap;\nexports.CommandMap = MathJax._.input.tex.SymbolMap.CommandMap;\nexports.EnvironmentMap = MathJax._.input.tex.SymbolMap.EnvironmentMap;\n","\"use strict\";\nObject.defineProperty(exports, '__esModule', {value: true});\nexports.default = MathJax._.input.tex.TexError.default;\n","\"use strict\";\nObject.defineProperty(exports, '__esModule', {value: true});\nexports.default = MathJax._.input.tex.base.BaseMethods.default;\n","\"use strict\";\nObject.defineProperty(exports, '__esModule', {value: true});\nexports.default = MathJax._.input.tex.ams.AmsMethods.default;\n","\"use strict\";\nObject.defineProperty(exports, '__esModule', {value: true});\n//\n// Core parser for mhchem syntax  (recursive)\n//\n/** @type {MhchemParser} */\nvar mhchemParser = {\n  //\n  // Parses mchem \\ce syntax\n  //\n  // Call like\n  //   go(\"H2O\");\n  //\n  go: function (input, stateMachine) {\n    if (!input) { return []; }\n    if (stateMachine === undefined) { stateMachine = 'ce'; }\n    var state = '0';\n\n    //\n    // String buffers for parsing:\n    //\n    // buffer.a == amount\n    // buffer.o == element\n    // buffer.b == left-side superscript\n    // buffer.p == left-side subscript\n    // buffer.q == right-side subscript\n    // buffer.d == right-side superscript\n    //\n    // buffer.r == arrow\n    // buffer.rdt == arrow, script above, type\n    // buffer.rd == arrow, script above, content\n    // buffer.rqt == arrow, script below, type\n    // buffer.rq == arrow, script below, content\n    //\n    // buffer.text_\n    // buffer.rm\n    // etc.\n    //\n    // buffer.parenthesisLevel == int, starting at 0\n    // buffer.sb == bool, space before\n    // buffer.beginsWithBond == bool\n    //\n    // These letters are also used as state names.\n    //\n    // Other states:\n    // 0 == begin of main part (arrow/operator unlikely)\n    // 1 == next entity\n    // 2 == next entity (arrow/operator unlikely)\n    // 3 == next atom\n    // c == macro\n    //\n    /** @type {Buffer} */\n    var buffer = {};\n    buffer['parenthesisLevel'] = 0;\n\n    input = input.replace(/\\n/g, \" \");\n    input = input.replace(/[\\u2212\\u2013\\u2014\\u2010]/g, \"-\");\n    input = input.replace(/[\\u2026]/g, \"...\");\n\n    //\n    // Looks through mhchemParser.transitions, to execute a matching action\n    // (recursive)\n    //\n    var lastInput;\n    var watchdog = 10;\n    /** @type {ParserOutput[]} */\n    var output = [];\n    while (true) {\n      if (lastInput !== input) {\n        watchdog = 10;\n        lastInput = input;\n      } else {\n        watchdog--;\n      }\n      //\n      // Find actions in transition table\n      //\n      var machine = mhchemParser.stateMachines[stateMachine];\n      var t = machine.transitions[state] || machine.transitions['*'];\n      iterateTransitions:\n      for (var i=0; i<t.length; i++) {\n        var matches = mhchemParser.patterns.match_(t[i].pattern, input);\n        if (matches) {\n          //\n          // Execute actions\n          //\n          var task = t[i].task;\n          for (var iA=0; iA<task.action_.length; iA++) {\n            var o;\n            //\n            // Find and execute action\n            //\n            if (machine.actions[task.action_[iA].type_]) {\n              o = machine.actions[task.action_[iA].type_](buffer, matches.match_, task.action_[iA].option);\n            } else if (mhchemParser.actions[task.action_[iA].type_]) {\n              o = mhchemParser.actions[task.action_[iA].type_](buffer, matches.match_, task.action_[iA].option);\n            } else {\n              throw [\"MhchemBugA\", \"mhchem bug A. Please report. (\" + task.action_[iA].type_ + \")\"];  // Trying to use non-existing action\n            }\n            //\n            // Add output\n            //\n            mhchemParser.concatArray(output, o);\n          }\n          //\n          // Set next state,\n          // Shorten input,\n          // Continue with next character\n          //   (= apply only one transition per position)\n          //\n          state = task.nextState || state;\n          if (input.length > 0) {\n            if (!task.revisit) {\n              input = matches.remainder;\n            }\n            if (!task.toContinue) {\n              break iterateTransitions;\n            }\n          } else {\n            return output;\n          }\n        }\n      }\n      //\n      // Prevent infinite loop\n      //\n      if (watchdog <= 0) {\n        throw [\"MhchemBugU\", \"mhchem bug U. Please report.\"];  // Unexpected character\n      }\n    }\n  },\n  concatArray: function (a, b) {\n    if (b) {\n      if (Array.isArray(b)) {\n        for (var iB=0; iB<b.length; iB++) {\n          a.push(b[iB]);\n        }\n      } else {\n        a.push(b);\n      }\n    }\n  },\n\n  patterns: {\n    //\n    // Matching patterns\n    // either regexps or function that return null or {match_:\"a\", remainder:\"bc\"}\n    //\n    patterns: {\n      // property names must not look like integers (\"2\") for correct property traversal order, later on\n      'empty': /^$/,\n      'else': /^./,\n      'else2': /^./,\n      'space': /^\\s/,\n      'space A': /^\\s(?=[A-Z\\\\$])/,\n      'space$': /^\\s$/,\n      'a-z': /^[a-z]/,\n      'x': /^x/,\n      'x$': /^x$/,\n      'i$': /^i$/,\n      'letters': /^(?:[a-zA-Z\\u03B1-\\u03C9\\u0391-\\u03A9?@]|(?:\\\\(?:alpha|beta|gamma|delta|epsilon|zeta|eta|theta|iota|kappa|lambda|mu|nu|xi|omicron|pi|rho|sigma|tau|upsilon|phi|chi|psi|omega|Gamma|Delta|Theta|Lambda|Xi|Pi|Sigma|Upsilon|Phi|Psi|Omega)(?:\\s+|\\{\\}|(?![a-zA-Z]))))+/,\n      '\\\\greek': /^\\\\(?:alpha|beta|gamma|delta|epsilon|zeta|eta|theta|iota|kappa|lambda|mu|nu|xi|omicron|pi|rho|sigma|tau|upsilon|phi|chi|psi|omega|Gamma|Delta|Theta|Lambda|Xi|Pi|Sigma|Upsilon|Phi|Psi|Omega)(?:\\s+|\\{\\}|(?![a-zA-Z]))/,\n      'one lowercase latin letter $': /^(?:([a-z])(?:$|[^a-zA-Z]))$/,\n      '$one lowercase latin letter$ $': /^\\$(?:([a-z])(?:$|[^a-zA-Z]))\\$$/,\n      'one lowercase greek letter $': /^(?:\\$?[\\u03B1-\\u03C9]\\$?|\\$?\\\\(?:alpha|beta|gamma|delta|epsilon|zeta|eta|theta|iota|kappa|lambda|mu|nu|xi|omicron|pi|rho|sigma|tau|upsilon|phi|chi|psi|omega)\\s*\\$?)(?:\\s+|\\{\\}|(?![a-zA-Z]))$/,\n      'digits': /^[0-9]+/,\n      '-9.,9': /^[+\\-]?(?:[0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\\.[0-9]+))/,\n      '-9.,9 no missing 0': /^[+\\-]?[0-9]+(?:[.,][0-9]+)?/,\n      '(-)(9.,9)(e)(99)': function (input) {\n        var m = input.match(/^(\\+\\-|\\+\\/\\-|\\+|\\-|\\\\pm\\s?)?([0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\\.[0-9]+))?(\\((?:[0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\\.[0-9]+))\\))?(?:([eE]|\\s*(\\*|x|\\\\times|\\u00D7)\\s*10\\^)([+\\-]?[0-9]+|\\{[+\\-]?[0-9]+\\}))?/);\n        if (m && m[0]) {\n          return { match_: m.splice(1), remainder: input.substr(m[0].length) };\n        }\n        return null;\n      },\n      '(-)(9)^(-9)': function (input) {\n        var m = input.match(/^(\\+\\-|\\+\\/\\-|\\+|\\-|\\\\pm\\s?)?([0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\\.[0-9]+)?)\\^([+\\-]?[0-9]+|\\{[+\\-]?[0-9]+\\})/);\n        if (m && m[0]) {\n          return { match_: m.splice(1), remainder: input.substr(m[0].length) };\n        }\n        return null;\n      },\n      'state of aggregation $': function (input) {  // ... or crystal system\n        var a = mhchemParser.patterns.findObserveGroups(input, \"\", /^\\([a-z]{1,3}(?=[\\),])/, \")\", \"\");  // (aq), (aq,$\\infty$), (aq, sat)\n        if (a  &&  a.remainder.match(/^($|[\\s,;\\)\\]\\}])/)) { return a; }  //  AND end of 'phrase'\n        var m = input.match(/^(?:\\((?:\\\\ca\\s?)?\\$[amothc]\\$\\))/);  // OR crystal system ($o$) (\\ca$c$)\n        if (m) {\n          return { match_: m[0], remainder: input.substr(m[0].length) };\n        }\n        return null;\n      },\n      '_{(state of aggregation)}$': /^_\\{(\\([a-z]{1,3}\\))\\}/,\n      '{[(': /^(?:\\\\\\{|\\[|\\()/,\n      ')]}': /^(?:\\)|\\]|\\\\\\})/,\n      ', ': /^[,;]\\s*/,\n      ',': /^[,;]/,\n      '.': /^[.]/,\n      '. ': /^([.\\u22C5\\u00B7\\u2022])\\s*/,\n      '...': /^\\.\\.\\.(?=$|[^.])/,\n      '* ': /^([*])\\s*/,\n      '^{(...)}': function (input) { return mhchemParser.patterns.findObserveGroups(input, \"^{\", \"\", \"\", \"}\"); },\n      '^($...$)': function (input) { return mhchemParser.patterns.findObserveGroups(input, \"^\", \"$\", \"$\", \"\"); },\n      '^a': /^\\^([0-9]+|[^\\\\_])/,\n      '^\\\\x{}{}': function (input) { return mhchemParser.patterns.findObserveGroups(input, \"^\", /^\\\\[a-zA-Z]+\\{/, \"}\", \"\", \"\", \"{\", \"}\", \"\", true); },\n      '^\\\\x{}': function (input) { return mhchemParser.patterns.findObserveGroups(input, \"^\", /^\\\\[a-zA-Z]+\\{/, \"}\", \"\"); },\n      '^\\\\x': /^\\^(\\\\[a-zA-Z]+)\\s*/,\n      '^(-1)': /^\\^(-?\\d+)/,\n      '\\'': /^'/,\n      '_{(...)}': function (input) { return mhchemParser.patterns.findObserveGroups(input, \"_{\", \"\", \"\", \"}\"); },\n      '_($...$)': function (input) { return mhchemParser.patterns.findObserveGroups(input, \"_\", \"$\", \"$\", \"\"); },\n      '_9': /^_([+\\-]?[0-9]+|[^\\\\])/,\n      '_\\\\x{}{}': function (input) { return mhchemParser.patterns.findObserveGroups(input, \"_\", /^\\\\[a-zA-Z]+\\{/, \"}\", \"\", \"\", \"{\", \"}\", \"\", true); },\n      '_\\\\x{}': function (input) { return mhchemParser.patterns.findObserveGroups(input, \"_\", /^\\\\[a-zA-Z]+\\{/, \"}\", \"\"); },\n      '_\\\\x': /^_(\\\\[a-zA-Z]+)\\s*/,\n      '^_': /^(?:\\^(?=_)|\\_(?=\\^)|[\\^_]$)/,\n      '{}': /^\\{\\}/,\n      '{...}': function (input) { return mhchemParser.patterns.findObserveGroups(input, \"\", \"{\", \"}\", \"\"); },\n      '{(...)}': function (input) { return mhchemParser.patterns.findObserveGroups(input, \"{\", \"\", \"\", \"}\"); },\n      '$...$': function (input) { return mhchemParser.patterns.findObserveGroups(input, \"\", \"$\", \"$\", \"\"); },\n      '${(...)}$': function (input) { return mhchemParser.patterns.findObserveGroups(input, \"${\", \"\", \"\", \"}$\"); },\n      '$(...)$': function (input) { return mhchemParser.patterns.findObserveGroups(input, \"$\", \"\", \"\", \"$\"); },\n      '=<>': /^[=<>]/,\n      '#': /^[#\\u2261]/,\n      '+': /^\\+/,\n      '-$': /^-(?=[\\s_},;\\]/]|$|\\([a-z]+\\))/,  // -space -, -; -] -/ -$ -state-of-aggregation\n      '-9': /^-(?=[0-9])/,\n      '- orbital overlap': /^-(?=(?:[spd]|sp)(?:$|[\\s,;\\)\\]\\}]))/,\n      '-': /^-/,\n      'pm-operator': /^(?:\\\\pm|\\$\\\\pm\\$|\\+-|\\+\\/-)/,\n      'operator': /^(?:\\+|(?:[\\-=<>]|<<|>>|\\\\approx|\\$\\\\approx\\$)(?=\\s|$|-?[0-9]))/,\n      'arrowUpDown': /^(?:v|\\(v\\)|\\^|\\(\\^\\))(?=$|[\\s,;\\)\\]\\}])/,\n      '\\\\bond{(...)}': function (input) { return mhchemParser.patterns.findObserveGroups(input, \"\\\\bond{\", \"\", \"\", \"}\"); },\n      '->': /^(?:<->|<-->|->|<-|<=>>|<<=>|<=>|[\\u2192\\u27F6\\u21CC])/,\n      'CMT': /^[CMT](?=\\[)/,\n      '[(...)]': function (input) { return mhchemParser.patterns.findObserveGroups(input, \"[\", \"\", \"\", \"]\"); },\n      '1st-level escape': /^(&|\\\\\\\\|\\\\hline)\\s*/,\n      '\\\\,': /^(?:\\\\[,\\ ;:])/,  // \\\\x - but output no space before\n      '\\\\x{}{}': function (input) { return mhchemParser.patterns.findObserveGroups(input, \"\", /^\\\\[a-zA-Z]+\\{/, \"}\", \"\", \"\", \"{\", \"}\", \"\", true); },\n      '\\\\x{}': function (input) { return mhchemParser.patterns.findObserveGroups(input, \"\", /^\\\\[a-zA-Z]+\\{/, \"}\", \"\"); },\n      '\\\\ca': /^\\\\ca(?:\\s+|(?![a-zA-Z]))/,\n      '\\\\x': /^(?:\\\\[a-zA-Z]+\\s*|\\\\[_&{}%])/,\n      'orbital': /^(?:[0-9]{1,2}[spdfgh]|[0-9]{0,2}sp)(?=$|[^a-zA-Z])/,  // only those with numbers in front, because the others will be formatted correctly anyway\n      'others': /^[\\/~|]/,\n      '\\\\frac{(...)}': function (input) { return mhchemParser.patterns.findObserveGroups(input, \"\\\\frac{\", \"\", \"\", \"}\", \"{\", \"\", \"\", \"}\"); },\n      '\\\\overset{(...)}': function (input) { return mhchemParser.patterns.findObserveGroups(input, \"\\\\overset{\", \"\", \"\", \"}\", \"{\", \"\", \"\", \"}\"); },\n      '\\\\underset{(...)}': function (input) { return mhchemParser.patterns.findObserveGroups(input, \"\\\\underset{\", \"\", \"\", \"}\", \"{\", \"\", \"\", \"}\"); },\n      '\\\\underbrace{(...)}': function (input) { return mhchemParser.patterns.findObserveGroups(input, \"\\\\underbrace{\", \"\", \"\", \"}_\", \"{\", \"\", \"\", \"}\"); },\n      '\\\\color{(...)}0': function (input) { return mhchemParser.patterns.findObserveGroups(input, \"\\\\color{\", \"\", \"\", \"}\"); },\n      '\\\\color{(...)}{(...)}1': function (input) { return mhchemParser.patterns.findObserveGroups(input, \"\\\\color{\", \"\", \"\", \"}\", \"{\", \"\", \"\", \"}\"); },\n      '\\\\color(...){(...)}2': function (input) { return mhchemParser.patterns.findObserveGroups(input, \"\\\\color\", \"\\\\\", \"\", /^(?=\\{)/, \"{\", \"\", \"\", \"}\"); },\n      '\\\\ce{(...)}': function (input) { return mhchemParser.patterns.findObserveGroups(input, \"\\\\ce{\", \"\", \"\", \"}\"); },\n      'oxidation$': /^(?:[+-][IVX]+|\\\\pm\\s*0|\\$\\\\pm\\$\\s*0)$/,\n      'd-oxidation$': /^(?:[+-]?\\s?[IVX]+|\\\\pm\\s*0|\\$\\\\pm\\$\\s*0)$/,  // 0 could be oxidation or charge\n      'roman numeral': /^[IVX]+/,\n      '1/2$': /^[+\\-]?(?:[0-9]+|\\$[a-z]\\$|[a-z])\\/[0-9]+(?:\\$[a-z]\\$|[a-z])?$/,\n      'amount': function (input) {\n        var match;\n        // e.g. 2, 0.5, 1/2, -2, n/2, +;  $a$ could be added later in parsing\n        match = input.match(/^(?:(?:(?:\\([+\\-]?[0-9]+\\/[0-9]+\\)|[+\\-]?(?:[0-9]+|\\$[a-z]\\$|[a-z])\\/[0-9]+|[+\\-]?[0-9]+[.,][0-9]+|[+\\-]?\\.[0-9]+|[+\\-]?[0-9]+)(?:[a-z](?=\\s*[A-Z]))?)|[+\\-]?[a-z](?=\\s*[A-Z])|\\+(?!\\s))/);\n        if (match) {\n          return { match_: match[0], remainder: input.substr(match[0].length) };\n        }\n        var a = mhchemParser.patterns.findObserveGroups(input, \"\", \"$\", \"$\", \"\");\n        if (a) {  // e.g. $2n-1$, $-$\n          match = a.match_.match(/^\\$(?:\\(?[+\\-]?(?:[0-9]*[a-z]?[+\\-])?[0-9]*[a-z](?:[+\\-][0-9]*[a-z]?)?\\)?|\\+|-)\\$$/);\n          if (match) {\n            return { match_: match[0], remainder: input.substr(match[0].length) };\n          }\n        }\n        return null;\n      },\n      'amount2': function (input) { return this['amount'](input); },\n      '(KV letters),': /^(?:[A-Z][a-z]{0,2}|i)(?=,)/,\n      'formula$': function (input) {\n        if (input.match(/^\\([a-z]+\\)$/)) { return null; }  // state of aggregation = no formula\n        var match = input.match(/^(?:[a-z]|(?:[0-9\\ \\+\\-\\,\\.\\(\\)]+[a-z])+[0-9\\ \\+\\-\\,\\.\\(\\)]*|(?:[a-z][0-9\\ \\+\\-\\,\\.\\(\\)]+)+[a-z]?)$/);\n        if (match) {\n          return { match_: match[0], remainder: input.substr(match[0].length) };\n        }\n        return null;\n      },\n      'uprightEntities': /^(?:pH|pOH|pC|pK|iPr|iBu)(?=$|[^a-zA-Z])/,\n      '/': /^\\s*(\\/)\\s*/,\n      '//': /^\\s*(\\/\\/)\\s*/,\n      '*': /^\\s*[*.]\\s*/\n    },\n    findObserveGroups: function (input, begExcl, begIncl, endIncl, endExcl, beg2Excl, beg2Incl, end2Incl, end2Excl, combine) {\n      /** @type {{(input: string, pattern: string | RegExp): string | string[] | null;}} */\n      var _match = function (input, pattern) {\n        if (typeof pattern === \"string\") {\n          if (input.indexOf(pattern) !== 0) { return null; }\n          return pattern;\n        } else {\n          var match = input.match(pattern);\n          if (!match) { return null; }\n          return match[0];\n        }\n      };\n      /** @type {{(input: string, i: number, endChars: string | RegExp): {endMatchBegin: number, endMatchEnd: number} | null;}} */\n      var _findObserveGroups = function (input, i, endChars) {\n        var braces = 0;\n        while (i < input.length) {\n          var a = input.charAt(i);\n          var match = _match(input.substr(i), endChars);\n          if (match !== null  &&  braces === 0) {\n            return { endMatchBegin: i, endMatchEnd: i + match.length };\n          } else if (a === \"{\") {\n            braces++;\n          } else if (a === \"}\") {\n            if (braces === 0) {\n              throw [\"ExtraCloseMissingOpen\", \"Extra close brace or missing open brace\"];\n            } else {\n              braces--;\n            }\n          }\n          i++;\n        }\n        if (braces > 0) {\n          return null;\n        }\n        return null;\n      };\n      var match = _match(input, begExcl);\n      if (match === null) { return null; }\n      input = input.substr(match.length);\n      match = _match(input, begIncl);\n      if (match === null) { return null; }\n      var e = _findObserveGroups(input, match.length, endIncl || endExcl);\n      if (e === null) { return null; }\n      var match1 = input.substring(0, (endIncl ? e.endMatchEnd : e.endMatchBegin));\n      if (!(beg2Excl || beg2Incl)) {\n        return {\n          match_: match1,\n          remainder: input.substr(e.endMatchEnd)\n        };\n      } else {\n        var group2 = this.findObserveGroups(input.substr(e.endMatchEnd), beg2Excl, beg2Incl, end2Incl, end2Excl);\n        if (group2 === null) { return null; }\n        /** @type {string[]} */\n        var matchRet = [match1, group2.match_];\n        return {\n          match_: (combine ? matchRet.join(\"\") : matchRet),\n          remainder: group2.remainder\n        };\n      }\n    },\n\n    //\n    // Matching function\n    // e.g. match(\"a\", input) will look for the regexp called \"a\" and see if it matches\n    // returns null or {match_:\"a\", remainder:\"bc\"}\n    //\n    match_: function (m, input) {\n      var pattern = mhchemParser.patterns.patterns[m];\n      if (pattern === undefined) {\n        throw [\"MhchemBugP\", \"mhchem bug P. Please report. (\" + m + \")\"];  // Trying to use non-existing pattern\n      } else if (typeof pattern === \"function\") {\n        return mhchemParser.patterns.patterns[m](input);  // cannot use cached var pattern here, because some pattern functions need this===mhchemParser\n      } else {  // RegExp\n        var match = input.match(pattern);\n        if (match) {\n          var mm;\n          if (match[2]) {\n            mm = [ match[1], match[2] ];\n          } else if (match[1]) {\n            mm = match[1];\n          } else {\n            mm = match[0];\n          }\n          return { match_: mm, remainder: input.substr(match[0].length) };\n        }\n        return null;\n      }\n    }\n  },\n\n  //\n  // Generic state machine actions\n  //\n  actions: {\n    'a=': function (buffer, m) { buffer.a = (buffer.a || \"\") + m; },\n    'b=': function (buffer, m) { buffer.b = (buffer.b || \"\") + m; },\n    'p=': function (buffer, m) { buffer.p = (buffer.p || \"\") + m; },\n    'o=': function (buffer, m) { buffer.o = (buffer.o || \"\") + m; },\n    'q=': function (buffer, m) { buffer.q = (buffer.q || \"\") + m; },\n    'd=': function (buffer, m) { buffer.d = (buffer.d || \"\") + m; },\n    'rm=': function (buffer, m) { buffer.rm = (buffer.rm || \"\") + m; },\n    'text=': function (buffer, m) { buffer.text_ = (buffer.text_ || \"\") + m; },\n    'insert': function (buffer, m, a) { return { type_: a }; },\n    'insert+p1': function (buffer, m, a) { return { type_: a, p1: m }; },\n    'insert+p1+p2': function (buffer, m, a) { return { type_: a, p1: m[0], p2: m[1] }; },\n    'copy': function (buffer, m) { return m; },\n    'rm': function (buffer, m) { return { type_: 'rm', p1: m || \"\"}; },\n    'text': function (buffer, m) { return mhchemParser.go(m, 'text'); },\n    '{text}': function (buffer, m) {\n      var ret = [ \"{\" ];\n      mhchemParser.concatArray(ret, mhchemParser.go(m, 'text'));\n      ret.push(\"}\");\n      return ret;\n    },\n    'tex-math': function (buffer, m) { return mhchemParser.go(m, 'tex-math'); },\n    'tex-math tight': function (buffer, m) { return mhchemParser.go(m, 'tex-math tight'); },\n    'bond': function (buffer, m, k) { return { type_: 'bond', kind_: k || m }; },\n    'color0-output': function (buffer, m) { return { type_: 'color0', color: m[0] }; },\n    'ce': function (buffer, m) { return mhchemParser.go(m); },\n    '1/2': function (buffer, m) {\n      /** @type {ParserOutput[]} */\n      var ret = [];\n      if (m.match(/^[+\\-]/)) {\n        ret.push(m.substr(0, 1));\n        m = m.substr(1);\n      }\n      var n = m.match(/^([0-9]+|\\$[a-z]\\$|[a-z])\\/([0-9]+)(\\$[a-z]\\$|[a-z])?$/);\n      n[1] = n[1].replace(/\\$/g, \"\");\n      ret.push({ type_: 'frac', p1: n[1], p2: n[2] });\n      if (n[3]) {\n        n[3] = n[3].replace(/\\$/g, \"\");\n        ret.push({ type_: 'tex-math', p1: n[3] });\n      }\n      return ret;\n    },\n    '9,9': function (buffer, m) { return mhchemParser.go(m, '9,9'); }\n  },\n  //\n  // createTransitions\n  // convert  { 'letter': { 'state': { action_: 'output' } } }  to  { 'state' => [ { pattern: 'letter', task: { action_: [{type_: 'output'}] } } ] }\n  // with expansion of 'a|b' to 'a' and 'b' (at 2 places)\n  //\n  createTransitions: function (o) {\n    var pattern, state;\n    /** @type {string[]} */\n    var stateArray;\n    var i;\n    //\n    // 1. Collect all states\n    //\n    /** @type {Transitions} */\n    var transitions = {};\n    for (pattern in o) {\n      for (state in o[pattern]) {\n        stateArray = state.split(\"|\");\n        o[pattern][state].stateArray = stateArray;\n        for (i=0; i<stateArray.length; i++) {\n          transitions[stateArray[i]] = [];\n        }\n      }\n    }\n    //\n    // 2. Fill states\n    //\n    for (pattern in o) {\n      for (state in o[pattern]) {\n        stateArray = o[pattern][state].stateArray || [];\n        for (i=0; i<stateArray.length; i++) {\n          //\n          // 2a. Normalize actions into array:  'text=' ==> [{type_:'text='}]\n          // (Note to myself: Resolving the function here would be problematic. It would need .bind (for *this*) and currying (for *option*).)\n          //\n          /** @type {any} */\n          var p = o[pattern][state];\n          if (p.action_) {\n            p.action_ = [].concat(p.action_);\n            for (var k=0; k<p.action_.length; k++) {\n              if (typeof p.action_[k] === \"string\") {\n                p.action_[k] = { type_: p.action_[k] };\n              }\n            }\n          } else {\n            p.action_ = [];\n          }\n          //\n          // 2.b Multi-insert\n          //\n          var patternArray = pattern.split(\"|\");\n          for (var j=0; j<patternArray.length; j++) {\n            if (stateArray[i] === '*') {  // insert into all\n              for (var t in transitions) {\n                transitions[t].push({ pattern: patternArray[j], task: p });\n              }\n            } else {\n              transitions[stateArray[i]].push({ pattern: patternArray[j], task: p });\n            }\n          }\n        }\n      }\n    }\n    return transitions;\n  },\n  stateMachines: {}\n};\n\n//\n// Definition of state machines\n//\nmhchemParser.stateMachines = {\n  //\n  // \\ce state machines\n  //\n  //#region ce\n  'ce': {  // main parser\n    transitions: mhchemParser.createTransitions({\n      'empty': {\n        '*': { action_: 'output' } },\n      'else':  {\n        '0|1|2': { action_: 'beginsWithBond=false', revisit: true, toContinue: true } },\n      'oxidation$': {\n        '0': { action_: 'oxidation-output' } },\n      'CMT': {\n        'r': { action_: 'rdt=', nextState: 'rt' },\n        'rd': { action_: 'rqt=', nextState: 'rdt' } },\n      'arrowUpDown': {\n        '0|1|2|as': { action_: [ 'sb=false', 'output', 'operator' ], nextState: '1' } },\n      'uprightEntities': {\n        '0|1|2': { action_: [ 'o=', 'output' ], nextState: '1' } },\n      'orbital': {\n        '0|1|2|3': { action_: 'o=', nextState: 'o' } },\n      '->': {\n        '0|1|2|3': { action_: 'r=', nextState: 'r' },\n        'a|as': { action_: [ 'output', 'r=' ], nextState: 'r' },\n        '*': { action_: [ 'output', 'r=' ], nextState: 'r' } },\n      '+': {\n        'o': { action_: 'd= kv',  nextState: 'd' },\n        'd|D': { action_: 'd=', nextState: 'd' },\n        'q': { action_: 'd=',  nextState: 'qd' },\n        'qd|qD': { action_: 'd=', nextState: 'qd' },\n        'dq': { action_: [ 'output', 'd=' ], nextState: 'd' },\n        '3': { action_: [ 'sb=false', 'output', 'operator' ], nextState: '0' } },\n      'amount': {\n        '0|2': { action_: 'a=', nextState: 'a' } },\n      'pm-operator': {\n        '0|1|2|a|as': { action_: [ 'sb=false', 'output', { type_: 'operator', option: '\\\\pm' } ], nextState: '0' } },\n      'operator': {\n        '0|1|2|a|as': { action_: [ 'sb=false', 'output', 'operator' ], nextState: '0' } },\n      '-$': {\n        'o|q': { action_: [ 'charge or bond', 'output' ],  nextState: 'qd' },\n        'd': { action_: 'd=', nextState: 'd' },\n        'D': { action_: [ 'output', { type_: 'bond', option: \"-\" } ], nextState: '3' },\n        'q': { action_: 'd=',  nextState: 'qd' },\n        'qd': { action_: 'd=', nextState: 'qd' },\n        'qD|dq': { action_: [ 'output', { type_: 'bond', option: \"-\" } ], nextState: '3' } },\n      '-9': {\n        '3|o': { action_: [ 'output', { type_: 'insert', option: 'hyphen' } ], nextState: '3' } },\n      '- orbital overlap': {\n        'o': { action_: [ 'output', { type_: 'insert', option: 'hyphen' } ], nextState: '2' },\n        'd': { action_: [ 'output', { type_: 'insert', option: 'hyphen' } ], nextState: '2' } },\n      '-': {\n        '0|1|2': { action_: [ { type_: 'output', option: 1 }, 'beginsWithBond=true', { type_: 'bond', option: \"-\" } ], nextState: '3' },\n        '3': { action_: { type_: 'bond', option: \"-\" } },\n        'a': { action_: [ 'output', { type_: 'insert', option: 'hyphen' } ], nextState: '2' },\n        'as': { action_: [ { type_: 'output', option: 2 }, { type_: 'bond', option: \"-\" } ], nextState: '3' },\n        'b': { action_: 'b=' },\n        'o': { action_: { type_: '- after o/d', option: false }, nextState: '2' },\n        'q': { action_: { type_: '- after o/d', option: false }, nextState: '2' },\n        'd|qd|dq': { action_: { type_: '- after o/d', option: true }, nextState: '2' },\n        'D|qD|p': { action_: [ 'output', { type_: 'bond', option: \"-\" } ], nextState: '3' } },\n      'amount2': {\n        '1|3': { action_: 'a=', nextState: 'a' } },\n      'letters': {\n        '0|1|2|3|a|as|b|p|bp|o': { action_: 'o=', nextState: 'o' },\n        'q|dq': { action_: ['output', 'o='], nextState: 'o' },\n        'd|D|qd|qD': { action_: 'o after d', nextState: 'o' } },\n      'digits': {\n        'o': { action_: 'q=', nextState: 'q' },\n        'd|D': { action_: 'q=', nextState: 'dq' },\n        'q': { action_: [ 'output', 'o=' ], nextState: 'o' },\n        'a': { action_: 'o=', nextState: 'o' } },\n      'space A': {\n        'b|p|bp': {} },\n      'space': {\n        'a': { nextState: 'as' },\n        '0': { action_: 'sb=false' },\n        '1|2': { action_: 'sb=true' },\n        'r|rt|rd|rdt|rdq': { action_: 'output', nextState: '0' },\n        '*': { action_: [ 'output', 'sb=true' ], nextState: '1'} },\n      '1st-level escape': {\n        '1|2': { action_: [ 'output', { type_: 'insert+p1', option: '1st-level escape' } ] },\n        '*': { action_: [ 'output', { type_: 'insert+p1', option: '1st-level escape' } ], nextState: '0' } },\n      '[(...)]': {\n        'r|rt': { action_: 'rd=', nextState: 'rd' },\n        'rd|rdt': { action_: 'rq=', nextState: 'rdq' } },\n      '...': {\n        'o|d|D|dq|qd|qD': { action_: [ 'output', { type_: 'bond', option: \"...\" } ], nextState: '3' },\n        '*': { action_: [ { type_: 'output', option: 1 }, { type_: 'insert', option: 'ellipsis' } ], nextState: '1' } },\n      '. |* ': {\n        '*': { action_: [ 'output', { type_: 'insert', option: 'addition compound' } ], nextState: '1' } },\n      'state of aggregation $': {\n        '*': { action_: [ 'output', 'state of aggregation' ], nextState: '1' } },\n      '{[(': {\n        'a|as|o': { action_: [ 'o=', 'output', 'parenthesisLevel++' ], nextState: '2' },\n        '0|1|2|3': { action_: [ 'o=', 'output', 'parenthesisLevel++' ], nextState: '2' },\n        '*': { action_: [ 'output', 'o=', 'output', 'parenthesisLevel++' ], nextState: '2' } },\n      ')]}': {\n        '0|1|2|3|b|p|bp|o': { action_: [ 'o=', 'parenthesisLevel--' ], nextState: 'o' },\n        'a|as|d|D|q|qd|qD|dq': { action_: [ 'output', 'o=', 'parenthesisLevel--' ], nextState: 'o' } },\n      ', ': {\n        '*': { action_: [ 'output', 'comma' ], nextState: '0' } },\n      '^_': {  // ^ and _ without a sensible argument\n        '*': { } },\n      '^{(...)}|^($...$)': {\n        '0|1|2|as': { action_: 'b=', nextState: 'b' },\n        'p': { action_: 'b=', nextState: 'bp' },\n        '3|o': { action_: 'd= kv', nextState: 'D' },\n        'q': { action_: 'd=', nextState: 'qD' },\n        'd|D|qd|qD|dq': { action_: [ 'output', 'd=' ], nextState: 'D' } },\n      '^a|^\\\\x{}{}|^\\\\x{}|^\\\\x|\\'': {\n        '0|1|2|as': { action_: 'b=', nextState: 'b' },\n        'p': { action_: 'b=', nextState: 'bp' },\n        '3|o': { action_: 'd= kv', nextState: 'd' },\n        'q': { action_: 'd=', nextState: 'qd' },\n        'd|qd|D|qD': { action_: 'd=' },\n        'dq': { action_: [ 'output', 'd=' ], nextState: 'd' } },\n      '_{(state of aggregation)}$': {\n        'd|D|q|qd|qD|dq': { action_: [ 'output', 'q=' ], nextState: 'q' } },\n      '_{(...)}|_($...$)|_9|_\\\\x{}{}|_\\\\x{}|_\\\\x': {\n        '0|1|2|as': { action_: 'p=', nextState: 'p' },\n        'b': { action_: 'p=', nextState: 'bp' },\n        '3|o': { action_: 'q=', nextState: 'q' },\n        'd|D': { action_: 'q=', nextState: 'dq' },\n        'q|qd|qD|dq': { action_: [ 'output', 'q=' ], nextState: 'q' } },\n      '=<>': {\n        '0|1|2|3|a|as|o|q|d|D|qd|qD|dq': { action_: [ { type_: 'output', option: 2 }, 'bond' ], nextState: '3' } },\n      '#': {\n        '0|1|2|3|a|as|o': { action_: [ { type_: 'output', option: 2 }, { type_: 'bond', option: \"#\" } ], nextState: '3' } },\n      '{}': {\n        '*': { action_: { type_: 'output', option: 1 },  nextState: '1' } },\n      '{...}': {\n        '0|1|2|3|a|as|b|p|bp': { action_: 'o=', nextState: 'o' },\n        'o|d|D|q|qd|qD|dq': { action_: [ 'output', 'o=' ], nextState: 'o' } },\n      '$...$': {\n        'a': { action_: 'a=' },  // 2$n$\n        '0|1|2|3|as|b|p|bp|o': { action_: 'o=', nextState: 'o' },  // not 'amount'\n        'as|o': { action_: 'o=' },\n        'q|d|D|qd|qD|dq': { action_: [ 'output', 'o=' ], nextState: 'o' } },\n      '\\\\bond{(...)}': {\n        '*': { action_: [ { type_: 'output', option: 2 }, 'bond' ], nextState: \"3\" } },\n      '\\\\frac{(...)}': {\n        '*': { action_: [ { type_: 'output', option: 1 }, 'frac-output' ], nextState: '3' } },\n      '\\\\overset{(...)}': {\n        '*': { action_: [ { type_: 'output', option: 2 }, 'overset-output' ], nextState: '3' } },\n      '\\\\underset{(...)}': {\n        '*': { action_: [ { type_: 'output', option: 2 }, 'underset-output' ], nextState: '3' } },\n      '\\\\underbrace{(...)}': {\n        '*': { action_: [ { type_: 'output', option: 2 }, 'underbrace-output' ], nextState: '3' } },\n      '\\\\color{(...)}{(...)}1|\\\\color(...){(...)}2': {\n        '*': { action_: [ { type_: 'output', option: 2 }, 'color-output' ], nextState: '3' } },\n      '\\\\color{(...)}0': {\n        '*': { action_: [ { type_: 'output', option: 2 }, 'color0-output' ] } },\n      '\\\\ce{(...)}': {\n        '*': { action_: [ { type_: 'output', option: 2 }, 'ce' ], nextState: '3' } },\n      '\\\\,': {\n        '*': { action_: [ { type_: 'output', option: 1 }, 'copy' ], nextState: '1' } },\n      '\\\\x{}{}|\\\\x{}|\\\\x': {\n        '0|1|2|3|a|as|b|p|bp|o|c0': { action_: [ 'o=', 'output' ], nextState: '3' },\n        '*': { action_: ['output', 'o=', 'output' ], nextState: '3' } },\n      'others': {\n        '*': { action_: [ { type_: 'output', option: 1 }, 'copy' ], nextState: '3' } },\n      'else2': {\n        'a': { action_: 'a to o', nextState: 'o', revisit: true },\n        'as': { action_: [ 'output', 'sb=true' ], nextState: '1', revisit: true },\n        'r|rt|rd|rdt|rdq': { action_: [ 'output' ], nextState: '0', revisit: true },\n        '*': { action_: [ 'output', 'copy' ], nextState: '3' } }\n    }),\n    actions: {\n      'o after d': function (buffer, m) {\n        var ret;\n        if ((buffer.d || \"\").match(/^[0-9]+$/)) {\n          var tmp = buffer.d;\n          buffer.d = undefined;\n          ret = this['output'](buffer);\n          buffer.b = tmp;\n        } else {\n          ret = this['output'](buffer);\n        }\n        mhchemParser.actions['o='](buffer, m);\n        return ret;\n      },\n      'd= kv': function (buffer, m) {\n        buffer.d = m;\n        buffer.dType = 'kv';\n      },\n      'charge or bond': function (buffer, m) {\n        if (buffer['beginsWithBond']) {\n          /** @type {ParserOutput[]} */\n          var ret = [];\n          mhchemParser.concatArray(ret, this['output'](buffer));\n          mhchemParser.concatArray(ret, mhchemParser.actions['bond'](buffer, m, \"-\"));\n          return ret;\n        } else {\n          buffer.d = m;\n        }\n      },\n      '- after o/d': function (buffer, m, isAfterD) {\n        var c1 = mhchemParser.patterns.match_('orbital', buffer.o || \"\");\n        var c2 = mhchemParser.patterns.match_('one lowercase greek letter $', buffer.o || \"\");\n        var c3 = mhchemParser.patterns.match_('one lowercase latin letter $', buffer.o || \"\");\n        var c4 = mhchemParser.patterns.match_('$one lowercase latin letter$ $', buffer.o || \"\");\n        var hyphenFollows =  m===\"-\" && ( c1 && c1.remainder===\"\"  ||  c2  ||  c3  ||  c4 );\n        if (hyphenFollows && !buffer.a && !buffer.b && !buffer.p && !buffer.d && !buffer.q && !c1 && c3) {\n          buffer.o = '$' + buffer.o + '$';\n        }\n        /** @type {ParserOutput[]} */\n        var ret = [];\n        if (hyphenFollows) {\n          mhchemParser.concatArray(ret, this['output'](buffer));\n          ret.push({ type_: 'hyphen' });\n        } else {\n          c1 = mhchemParser.patterns.match_('digits', buffer.d || \"\");\n          if (isAfterD && c1 && c1.remainder==='') {\n            mhchemParser.concatArray(ret, mhchemParser.actions['d='](buffer, m));\n            mhchemParser.concatArray(ret, this['output'](buffer));\n          } else {\n            mhchemParser.concatArray(ret, this['output'](buffer));\n            mhchemParser.concatArray(ret, mhchemParser.actions['bond'](buffer, m, \"-\"));\n          }\n        }\n        return ret;\n      },\n      'a to o': function (buffer) {\n        buffer.o = buffer.a;\n        buffer.a = undefined;\n      },\n      'sb=true': function (buffer) { buffer.sb = true; },\n      'sb=false': function (buffer) { buffer.sb = false; },\n      'beginsWithBond=true': function (buffer) { buffer['beginsWithBond'] = true; },\n      'beginsWithBond=false': function (buffer) { buffer['beginsWithBond'] = false; },\n      'parenthesisLevel++': function (buffer) { buffer['parenthesisLevel']++; },\n      'parenthesisLevel--': function (buffer) { buffer['parenthesisLevel']--; },\n      'state of aggregation': function (buffer, m) {\n        return { type_: 'state of aggregation', p1: mhchemParser.go(m, 'o') };\n      },\n      'comma': function (buffer, m) {\n        var a = m.replace(/\\s*$/, '');\n        var withSpace = (a !== m);\n        if (withSpace  &&  buffer['parenthesisLevel'] === 0) {\n          return { type_: 'comma enumeration L', p1: a };\n        } else {\n          return { type_: 'comma enumeration M', p1: a };\n        }\n      },\n      'output': function (buffer, m, entityFollows) {\n        // entityFollows:\n        //   undefined = if we have nothing else to output, also ignore the just read space (buffer.sb)\n        //   1 = an entity follows, never omit the space if there was one just read before (can only apply to state 1)\n        //   2 = 1 + the entity can have an amount, so output a\\, instead of converting it to o (can only apply to states a|as)\n        /** @type {ParserOutput | ParserOutput[]} */\n        var ret;\n        if (!buffer.r) {\n          ret = [];\n          if (!buffer.a && !buffer.b && !buffer.p && !buffer.o && !buffer.q && !buffer.d && !entityFollows) {\n            //ret = [];\n          } else {\n            if (buffer.sb) {\n              ret.push({ type_: 'entitySkip' });\n            }\n            if (!buffer.o && !buffer.q && !buffer.d && !buffer.b && !buffer.p && entityFollows!==2) {\n              buffer.o = buffer.a;\n              buffer.a = undefined;\n            } else if (!buffer.o && !buffer.q && !buffer.d && (buffer.b || buffer.p)) {\n              buffer.o = buffer.a;\n              buffer.d = buffer.b;\n              buffer.q = buffer.p;\n              buffer.a = buffer.b = buffer.p = undefined;\n            } else {\n              if (buffer.o && buffer.dType==='kv' && mhchemParser.patterns.match_('d-oxidation$', buffer.d || \"\")) {\n                buffer.dType = 'oxidation';\n              } else if (buffer.o && buffer.dType==='kv' && !buffer.q) {\n                buffer.dType = undefined;\n              }\n            }\n            ret.push({\n              type_: 'chemfive',\n              a: mhchemParser.go(buffer.a, 'a'),\n              b: mhchemParser.go(buffer.b, 'bd'),\n              p: mhchemParser.go(buffer.p, 'pq'),\n              o: mhchemParser.go(buffer.o, 'o'),\n              q: mhchemParser.go(buffer.q, 'pq'),\n              d: mhchemParser.go(buffer.d, (buffer.dType === 'oxidation' ? 'oxidation' : 'bd')),\n              dType: buffer.dType\n            });\n          }\n        } else {  // r\n          /** @type {ParserOutput[]} */\n          var rd;\n          if (buffer.rdt === 'M') {\n            rd = mhchemParser.go(buffer.rd, 'tex-math');\n          } else if (buffer.rdt === 'T') {\n            rd = [ { type_: 'text', p1: buffer.rd || \"\" } ];\n          } else {\n            rd = mhchemParser.go(buffer.rd);\n          }\n          /** @type {ParserOutput[]} */\n          var rq;\n          if (buffer.rqt === 'M') {\n            rq = mhchemParser.go(buffer.rq, 'tex-math');\n          } else if (buffer.rqt === 'T') {\n            rq = [ { type_: 'text', p1: buffer.rq || \"\"} ];\n          } else {\n            rq = mhchemParser.go(buffer.rq);\n          }\n          ret = {\n            type_: 'arrow',\n            r: buffer.r,\n            rd: rd,\n            rq: rq\n          };\n        }\n        for (var p in buffer) {\n          if (p !== 'parenthesisLevel'  &&  p !== 'beginsWithBond') {\n            delete buffer[p];\n          }\n        }\n        return ret;\n      },\n      'oxidation-output': function (buffer, m) {\n        var ret = [ \"{\" ];\n        mhchemParser.concatArray(ret, mhchemParser.go(m, 'oxidation'));\n        ret.push(\"}\");\n        return ret;\n      },\n      'frac-output': function (buffer, m) {\n        return { type_: 'frac-ce', p1: mhchemParser.go(m[0]), p2: mhchemParser.go(m[1]) };\n      },\n      'overset-output': function (buffer, m) {\n        return { type_: 'overset', p1: mhchemParser.go(m[0]), p2: mhchemParser.go(m[1]) };\n      },\n      'underset-output': function (buffer, m) {\n        return { type_: 'underset', p1: mhchemParser.go(m[0]), p2: mhchemParser.go(m[1]) };\n      },\n      'underbrace-output': function (buffer, m) {\n        return { type_: 'underbrace', p1: mhchemParser.go(m[0]), p2: mhchemParser.go(m[1]) };\n      },\n      'color-output': function (buffer, m) {\n        return { type_: 'color', color1: m[0], color2: mhchemParser.go(m[1]) };\n      },\n      'r=': function (buffer, m) { buffer.r = m; },\n      'rdt=': function (buffer, m) { buffer.rdt = m; },\n      'rd=': function (buffer, m) { buffer.rd = m; },\n      'rqt=': function (buffer, m) { buffer.rqt = m; },\n      'rq=': function (buffer, m) { buffer.rq = m; },\n      'operator': function (buffer, m, p1) { return { type_: 'operator', kind_: (p1 || m) }; }\n    }\n  },\n  'a': {\n    transitions: mhchemParser.createTransitions({\n      'empty': {\n        '*': {} },\n      '1/2$': {\n        '0': { action_: '1/2' } },\n      'else': {\n        '0': { nextState: '1', revisit: true } },\n      '$(...)$': {\n        '*': { action_: 'tex-math tight', nextState: '1' } },\n      ',': {\n        '*': { action_: { type_: 'insert', option: 'commaDecimal' } } },\n      'else2': {\n        '*': { action_: 'copy' } }\n    }),\n    actions: {}\n  },\n  'o': {\n    transitions: mhchemParser.createTransitions({\n      'empty': {\n        '*': {} },\n      '1/2$': {\n        '0': { action_: '1/2' } },\n      'else': {\n        '0': { nextState: '1', revisit: true } },\n      'letters': {\n        '*': { action_: 'rm' } },\n      '\\\\ca': {\n        '*': { action_: { type_: 'insert', option: 'circa' } } },\n      '\\\\x{}{}|\\\\x{}|\\\\x': {\n        '*': { action_: 'copy' } },\n      '${(...)}$|$(...)$': {\n        '*': { action_: 'tex-math' } },\n      '{(...)}': {\n        '*': { action_: '{text}' } },\n      'else2': {\n        '*': { action_: 'copy' } }\n    }),\n    actions: {}\n  },\n  'text': {\n    transitions: mhchemParser.createTransitions({\n      'empty': {\n        '*': { action_: 'output' } },\n      '{...}': {\n        '*': { action_: 'text=' } },\n      '${(...)}$|$(...)$': {\n        '*': { action_: 'tex-math' } },\n      '\\\\greek': {\n        '*': { action_: [ 'output', 'rm' ] } },\n      '\\\\,|\\\\x{}{}|\\\\x{}|\\\\x': {\n        '*': { action_: [ 'output', 'copy' ] } },\n      'else': {\n        '*': { action_: 'text=' } }\n    }),\n    actions: {\n      'output': function (buffer) {\n        if (buffer.text_) {\n          /** @type {ParserOutput} */\n          var ret = { type_: 'text', p1: buffer.text_ };\n          for (var p in buffer) { delete buffer[p]; }\n          return ret;\n        }\n      }\n    }\n  },\n  'pq': {\n    transitions: mhchemParser.createTransitions({\n      'empty': {\n        '*': {} },\n      'state of aggregation $': {\n        '*': { action_: 'state of aggregation' } },\n      'i$': {\n        '0': { nextState: '!f', revisit: true } },\n      '(KV letters),': {\n        '0': { action_: 'rm', nextState: '0' } },\n      'formula$': {\n        '0': { nextState: 'f', revisit: true } },\n      '1/2$': {\n        '0': { action_: '1/2' } },\n      'else': {\n        '0': { nextState: '!f', revisit: true } },\n      '${(...)}$|$(...)$': {\n        '*': { action_: 'tex-math' } },\n      '{(...)}': {\n        '*': { action_: 'text' } },\n      'a-z': {\n        'f': { action_: 'tex-math' } },\n      'letters': {\n        '*': { action_: 'rm' } },\n      '-9.,9': {\n        '*': { action_: '9,9'  } },\n      ',': {\n        '*': { action_: { type_: 'insert+p1', option: 'comma enumeration S' } } },\n      '\\\\color{(...)}{(...)}1|\\\\color(...){(...)}2': {\n        '*': { action_: 'color-output' } },\n      '\\\\color{(...)}0': {\n        '*': { action_: 'color0-output' } },\n      '\\\\ce{(...)}': {\n        '*': { action_: 'ce' } },\n      '\\\\,|\\\\x{}{}|\\\\x{}|\\\\x': {\n        '*': { action_: 'copy' } },\n      'else2': {\n        '*': { action_: 'copy' } }\n    }),\n    actions: {\n      'state of aggregation': function (buffer, m) {\n        return { type_: 'state of aggregation subscript', p1: mhchemParser.go(m, 'o') };\n      },\n      'color-output': function (buffer, m) {\n        return { type_: 'color', color1: m[0], color2: mhchemParser.go(m[1], 'pq') };\n      }\n    }\n  },\n  'bd': {\n    transitions: mhchemParser.createTransitions({\n      'empty': {\n        '*': {} },\n      'x$': {\n        '0': { nextState: '!f', revisit: true } },\n      'formula$': {\n        '0': { nextState: 'f', revisit: true } },\n      'else': {\n        '0': { nextState: '!f', revisit: true } },\n      '-9.,9 no missing 0': {\n        '*': { action_: '9,9' } },\n      '.': {\n        '*': { action_: { type_: 'insert', option: 'electron dot' } } },\n      'a-z': {\n        'f': { action_: 'tex-math' } },\n      'x': {\n        '*': { action_: { type_: 'insert', option: 'KV x' } } },\n      'letters': {\n        '*': { action_: 'rm' } },\n      '\\'': {\n        '*': { action_: { type_: 'insert', option: 'prime' } } },\n      '${(...)}$|$(...)$': {\n        '*': { action_: 'tex-math' } },\n      '{(...)}': {\n        '*': { action_: 'text' } },\n      '\\\\color{(...)}{(...)}1|\\\\color(...){(...)}2': {\n        '*': { action_: 'color-output' } },\n      '\\\\color{(...)}0': {\n        '*': { action_: 'color0-output' } },\n      '\\\\ce{(...)}': {\n        '*': { action_: 'ce' } },\n      '\\\\,|\\\\x{}{}|\\\\x{}|\\\\x': {\n        '*': { action_: 'copy' } },\n      'else2': {\n        '*': { action_: 'copy' } }\n    }),\n    actions: {\n      'color-output': function (buffer, m) {\n        return { type_: 'color', color1: m[0], color2: mhchemParser.go(m[1], 'bd') };\n      }\n    }\n  },\n  'oxidation': {\n    transitions: mhchemParser.createTransitions({\n      'empty': {\n        '*': {} },\n      'roman numeral': {\n        '*': { action_: 'roman-numeral' } },\n      '${(...)}$|$(...)$': {\n        '*': { action_: 'tex-math' } },\n      'else': {\n        '*': { action_: 'copy' } }\n    }),\n    actions: {\n      'roman-numeral': function (buffer, m) { return { type_: 'roman numeral', p1: m || \"\" }; }\n    }\n  },\n  'tex-math': {\n    transitions: mhchemParser.createTransitions({\n      'empty': {\n        '*': { action_: 'output' } },\n      '\\\\ce{(...)}': {\n        '*': { action_: [ 'output', 'ce' ] } },\n      '{...}|\\\\,|\\\\x{}{}|\\\\x{}|\\\\x': {\n        '*': { action_: 'o=' } },\n      'else': {\n        '*': { action_: 'o=' } }\n    }),\n    actions: {\n      'output': function (buffer) {\n        if (buffer.o) {\n          /** @type {ParserOutput} */\n          var ret = { type_: 'tex-math', p1: buffer.o };\n          for (var p in buffer) { delete buffer[p]; }\n          return ret;\n        }\n      }\n    }\n  },\n  'tex-math tight': {\n    transitions: mhchemParser.createTransitions({\n      'empty': {\n        '*': { action_: 'output' } },\n      '\\\\ce{(...)}': {\n        '*': { action_: [ 'output', 'ce' ] } },\n      '{...}|\\\\,|\\\\x{}{}|\\\\x{}|\\\\x': {\n        '*': { action_: 'o=' } },\n      '-|+': {\n        '*': { action_: 'tight operator' } },\n      'else': {\n        '*': { action_: 'o=' } }\n    }),\n    actions: {\n      'tight operator': function (buffer, m) { buffer.o = (buffer.o || \"\") + \"{\"+m+\"}\"; },\n      'output': function (buffer) {\n        if (buffer.o) {\n          /** @type {ParserOutput} */\n          var ret = { type_: 'tex-math', p1: buffer.o };\n          for (var p in buffer) { delete buffer[p]; }\n          return ret;\n        }\n      }\n    }\n  },\n  '9,9': {\n    transitions: mhchemParser.createTransitions({\n      'empty': {\n        '*': {} },\n      ',': {\n        '*': { action_: 'comma' } },\n      'else': {\n        '*': { action_: 'copy' } }\n    }),\n    actions: {\n      'comma': function () { return { type_: 'commaDecimal' }; }\n    }\n  },\n  //#endregion\n  //\n  // \\pu state machines\n  //\n  //#region pu\n  'pu': {\n    transitions: mhchemParser.createTransitions({\n      'empty': {\n        '*': { action_: 'output' } },\n      'space$': {\n        '*': { action_: [ 'output', 'space' ] } },\n      '{[(|)]}': {\n        '0|a': { action_: 'copy' } },\n      '(-)(9)^(-9)': {\n        '0': { action_: 'number^', nextState: 'a' } },\n      '(-)(9.,9)(e)(99)': {\n        '0': { action_: 'enumber', nextState: 'a' } },\n      'space': {\n        '0|a': {} },\n      'pm-operator': {\n        '0|a': { action_: { type_: 'operator', option: '\\\\pm' }, nextState: '0' } },\n      'operator': {\n        '0|a': { action_: 'copy', nextState: '0' } },\n      '//': {\n        'd': { action_: 'o=', nextState: '/' } },\n      '/': {\n        'd': { action_: 'o=', nextState: '/' } },\n      '{...}|else': {\n        '0|d': { action_: 'd=', nextState: 'd' },\n        'a': { action_: [ 'space', 'd=' ], nextState: 'd' },\n        '/|q': { action_: 'q=', nextState: 'q' } }\n    }),\n    actions: {\n      'enumber': function (buffer, m) {\n        /** @type {ParserOutput[]} */\n        var ret = [];\n        if (m[0] === \"+-\"  ||  m[0] === \"+/-\") {\n          ret.push(\"\\\\pm \");\n        } else if (m[0]) {\n          ret.push(m[0]);\n        }\n        if (m[1]) {\n          mhchemParser.concatArray(ret, mhchemParser.go(m[1], 'pu-9,9'));\n          if (m[2]) {\n            if (m[2].match(/[,.]/)) {\n              mhchemParser.concatArray(ret, mhchemParser.go(m[2], 'pu-9,9'));\n            } else {\n              ret.push(m[2]);\n            }\n          }\n          m[3] = m[4] || m[3];\n          if (m[3]) {\n            m[3] = m[3].trim();\n            if (m[3] === \"e\"  ||  m[3].substr(0, 1) === \"*\") {\n              ret.push({ type_: 'cdot' });\n            } else {\n              ret.push({ type_: 'times' });\n            }\n          }\n        }\n        if (m[3]) {\n          ret.push(\"10^{\"+m[5]+\"}\");\n        }\n        return ret;\n      },\n      'number^': function (buffer, m) {\n        /** @type {ParserOutput[]} */\n        var ret = [];\n        if (m[0] === \"+-\"  ||  m[0] === \"+/-\") {\n          ret.push(\"\\\\pm \");\n        } else if (m[0]) {\n          ret.push(m[0]);\n        }\n        mhchemParser.concatArray(ret, mhchemParser.go(m[1], 'pu-9,9'));\n        ret.push(\"^{\"+m[2]+\"}\");\n        return ret;\n      },\n      'operator': function (buffer, m, p1) { return { type_: 'operator', kind_: (p1 || m) }; },\n      'space': function () { return { type_: 'pu-space-1' }; },\n      'output': function (buffer) {\n        /** @type {ParserOutput | ParserOutput[]} */\n        var ret;\n        var md = mhchemParser.patterns.match_('{(...)}', buffer.d || \"\");\n        if (md  &&  md.remainder === '') { buffer.d = md.match_; }\n        var mq = mhchemParser.patterns.match_('{(...)}', buffer.q || \"\");\n        if (mq  &&  mq.remainder === '') { buffer.q = mq.match_; }\n        if (buffer.d) {\n          buffer.d = buffer.d.replace(/\\u00B0C|\\^oC|\\^{o}C/g, \"{}^{\\\\circ}C\");\n          buffer.d = buffer.d.replace(/\\u00B0F|\\^oF|\\^{o}F/g, \"{}^{\\\\circ}F\");\n        }\n        if (buffer.q) {  // fraction\n          buffer.q = buffer.q.replace(/\\u00B0C|\\^oC|\\^{o}C/g, \"{}^{\\\\circ}C\");\n          buffer.q = buffer.q.replace(/\\u00B0F|\\^oF|\\^{o}F/g, \"{}^{\\\\circ}F\");\n          var b5 = {\n            d: mhchemParser.go(buffer.d, 'pu'),\n            q: mhchemParser.go(buffer.q, 'pu')\n          };\n          if (buffer.o === '//') {\n            ret = { type_: 'pu-frac', p1: b5.d, p2: b5.q };\n          } else {\n            ret = b5.d;\n            if (b5.d.length > 1  ||  b5.q.length > 1) {\n              ret.push({ type_: ' / ' });\n            } else {\n              ret.push({ type_: '/' });\n            }\n            mhchemParser.concatArray(ret, b5.q);\n          }\n        } else {  // no fraction\n          ret = mhchemParser.go(buffer.d, 'pu-2');\n        }\n        for (var p in buffer) { delete buffer[p]; }\n        return ret;\n      }\n    }\n  },\n  'pu-2': {\n    transitions: mhchemParser.createTransitions({\n      'empty': {\n        '*': { action_: 'output' } },\n      '*': {\n        '*': { action_: [ 'output', 'cdot' ], nextState: '0' } },\n      '\\\\x': {\n        '*': { action_: 'rm=' } },\n      'space': {\n        '*': { action_: [ 'output', 'space' ], nextState: '0' } },\n      '^{(...)}|^(-1)': {\n        '1': { action_: '^(-1)' } },\n      '-9.,9': {\n        '0': { action_: 'rm=', nextState: '0' },\n        '1': { action_: '^(-1)', nextState: '0' } },\n      '{...}|else': {\n        '*': { action_: 'rm=', nextState: '1' } }\n    }),\n    actions: {\n      'cdot': function () { return { type_: 'tight cdot' }; },\n      '^(-1)': function (buffer, m) { buffer.rm += \"^{\"+m+\"}\"; },\n      'space': function () { return { type_: 'pu-space-2' }; },\n      'output': function (buffer) {\n        /** @type {ParserOutput | ParserOutput[]} */\n        var ret = [];\n        if (buffer.rm) {\n          var mrm = mhchemParser.patterns.match_('{(...)}', buffer.rm || \"\");\n          if (mrm  &&  mrm.remainder === '') {\n            ret = mhchemParser.go(mrm.match_, 'pu');\n          } else {\n            ret = { type_: 'rm', p1: buffer.rm };\n          }\n        }\n        for (var p in buffer) { delete buffer[p]; }\n        return ret;\n      }\n    }\n  },\n  'pu-9,9': {\n    transitions: mhchemParser.createTransitions({\n      'empty': {\n        '0': { action_: 'output-0' },\n        'o': { action_: 'output-o' } },\n      ',': {\n        '0': { action_: [ 'output-0', 'comma' ], nextState: 'o' } },\n      '.': {\n        '0': { action_: [ 'output-0', 'copy' ], nextState: 'o' } },\n      'else': {\n        '*': { action_: 'text=' } }\n    }),\n    actions: {\n      'comma': function () { return { type_: 'commaDecimal' }; },\n      'output-0': function (buffer) {\n        /** @type {ParserOutput[]} */\n        var ret = [];\n        buffer.text_ = buffer.text_ || \"\";\n        if (buffer.text_.length > 4) {\n          var a = buffer.text_.length % 3;\n          if (a === 0) { a = 3; }\n          for (var i=buffer.text_.length-3; i>0; i-=3) {\n            ret.push(buffer.text_.substr(i, 3));\n            ret.push({ type_: '1000 separator' });\n          }\n          ret.push(buffer.text_.substr(0, a));\n          ret.reverse();\n        } else {\n          ret.push(buffer.text_);\n        }\n        for (var p in buffer) { delete buffer[p]; }\n        return ret;\n      },\n      'output-o': function (buffer) {\n        /** @type {ParserOutput[]} */\n        var ret = [];\n        buffer.text_ = buffer.text_ || \"\";\n        if (buffer.text_.length > 4) {\n          var a = buffer.text_.length - 3;\n          for (var i=0; i<a; i+=3) {\n            ret.push(buffer.text_.substr(i, 3));\n            ret.push({ type_: '1000 separator' });\n          }\n          ret.push(buffer.text_.substr(i));\n        } else {\n          ret.push(buffer.text_);\n        }\n        for (var p in buffer) { delete buffer[p]; }\n        return ret;\n      }\n    }\n  }\n  //#endregion\n};\n\n//\n// texify: Take MhchemParser output and convert it to TeX\n//\n/** @type {Texify} */\nvar texify = {\n  go: function (input, isInner) {  // (recursive, max 4 levels)\n    if (!input) { return \"\"; }\n    var res = \"\";\n    var cee = false;\n    for (var i=0; i < input.length; i++) {\n      var inputi = input[i];\n      if (typeof inputi === \"string\") {\n        res += inputi;\n      } else {\n        res += texify._go2(inputi);\n        if (inputi.type_ === '1st-level escape') { cee = true; }\n      }\n    }\n    if (!isInner && !cee && res) {\n      res = \"{\" + res + \"}\";\n    }\n    return res;\n  },\n  _goInner: function (input) {\n    if (!input) { return input; }\n    return texify.go(input, true);\n  },\n  _go2: function (buf) {\n    /** @type {undefined | string} */\n    var res;\n    switch (buf.type_) {\n    case 'chemfive':\n      res = \"\";\n      var b5 = {\n        a: texify._goInner(buf.a),\n        b: texify._goInner(buf.b),\n        p: texify._goInner(buf.p),\n        o: texify._goInner(buf.o),\n        q: texify._goInner(buf.q),\n        d: texify._goInner(buf.d)\n      };\n      //\n      // a\n      //\n      if (b5.a) {\n        if (b5.a.match(/^[+\\-]/)) { b5.a = \"{\"+b5.a+\"}\"; }\n        res += b5.a + \"\\\\,\";\n      }\n      //\n      // b and p\n      //\n      if (b5.b || b5.p) {\n        res += \"{\\\\vphantom{X}}\";\n        res += \"^{\\\\hphantom{\"+(b5.b||\"\")+\"}}_{\\\\hphantom{\"+(b5.p||\"\")+\"}}\";\n        res += \"{\\\\vphantom{X}}\";\n        res += \"^{\\\\smash[t]{\\\\vphantom{2}}\\\\llap{\"+(b5.b||\"\")+\"}}\";\n        res += \"_{\\\\vphantom{2}\\\\llap{\\\\smash[t]{\"+(b5.p||\"\")+\"}}}\";\n      }\n      //\n      // o\n      //\n      if (b5.o) {\n        if (b5.o.match(/^[+\\-]/)) { b5.o = \"{\"+b5.o+\"}\"; }\n        res += b5.o;\n      }\n      //\n      // q and d\n      //\n      if (buf.dType === 'kv') {\n        if (b5.d || b5.q) {\n          res += \"{\\\\vphantom{X}}\";\n        }\n        if (b5.d) {\n          res += \"^{\"+b5.d+\"}\";\n        }\n        if (b5.q) {\n          res += \"_{\\\\smash[t]{\"+b5.q+\"}}\";\n        }\n      } else if (buf.dType === 'oxidation') {\n        if (b5.d) {\n          res += \"{\\\\vphantom{X}}\";\n          res += \"^{\"+b5.d+\"}\";\n        }\n        if (b5.q) {\n          res += \"{\\\\vphantom{X}}\";\n          res += \"_{\\\\smash[t]{\"+b5.q+\"}}\";\n        }\n      } else {\n        if (b5.q) {\n          res += \"{\\\\vphantom{X}}\";\n          res += \"_{\\\\smash[t]{\"+b5.q+\"}}\";\n        }\n        if (b5.d) {\n          res += \"{\\\\vphantom{X}}\";\n          res += \"^{\"+b5.d+\"}\";\n        }\n      }\n      break;\n    case 'rm':\n      res = \"\\\\mathrm{\"+buf.p1+\"}\";\n      break;\n    case 'text':\n      if (buf.p1.match(/[\\^_]/)) {\n        buf.p1 = buf.p1.replace(\" \", \"~\").replace(\"-\", \"\\\\text{-}\");\n        res = \"\\\\mathrm{\"+buf.p1+\"}\";\n      } else {\n        res = \"\\\\text{\"+buf.p1+\"}\";\n      }\n      break;\n    case 'roman numeral':\n      res = \"\\\\mathrm{\"+buf.p1+\"}\";\n      break;\n    case 'state of aggregation':\n      res = \"\\\\mskip2mu \"+texify._goInner(buf.p1);\n      break;\n    case 'state of aggregation subscript':\n      res = \"\\\\mskip1mu \"+texify._goInner(buf.p1);\n      break;\n    case 'bond':\n      res = texify._getBond(buf.kind_);\n      if (!res) {\n        throw [\"MhchemErrorBond\", \"mhchem Error. Unknown bond type (\" + buf.kind_ + \")\"];\n      }\n      break;\n    case 'frac':\n      var c = \"\\\\frac{\" + buf.p1 + \"}{\" + buf.p2 + \"}\";\n      res = \"\\\\mathchoice{\\\\textstyle\"+c+\"}{\"+c+\"}{\"+c+\"}{\"+c+\"}\";\n      break;\n    case 'pu-frac':\n      var d = \"\\\\frac{\" + texify._goInner(buf.p1) + \"}{\" + texify._goInner(buf.p2) + \"}\";\n      res = \"\\\\mathchoice{\\\\textstyle\"+d+\"}{\"+d+\"}{\"+d+\"}{\"+d+\"}\";\n      break;\n    case 'tex-math':\n      res = buf.p1 + \" \";\n      break;\n    case 'frac-ce':\n      res = \"\\\\frac{\" + texify._goInner(buf.p1) + \"}{\" + texify._goInner(buf.p2) + \"}\";\n      break;\n    case 'overset':\n      res = \"\\\\overset{\" + texify._goInner(buf.p1) + \"}{\" + texify._goInner(buf.p2) + \"}\";\n      break;\n    case 'underset':\n      res = \"\\\\underset{\" + texify._goInner(buf.p1) + \"}{\" + texify._goInner(buf.p2) + \"}\";\n      break;\n    case 'underbrace':\n      res =  \"\\\\underbrace{\" + texify._goInner(buf.p1) + \"}_{\" + texify._goInner(buf.p2) + \"}\";\n      break;\n    case 'color':\n      res = \"{\\\\color{\" + buf.color1 + \"}{\" + texify._goInner(buf.color2) + \"}}\";\n      break;\n    case 'color0':\n      res = \"\\\\color{\" + buf.color + \"}\";\n      break;\n    case 'arrow':\n      var b6 = {\n        rd: texify._goInner(buf.rd),\n        rq: texify._goInner(buf.rq)\n      };\n      var arrow = texify._getArrow(buf.r);\n      if (b6.rd || b6.rq) {\n        if (buf.r === \"<=>\"  ||  buf.r === \"<=>>\"  ||  buf.r === \"<<=>\"  ||  buf.r === \"<-->\") {\n          // arrows that cannot stretch correctly yet, https://github.com/mathjax/MathJax/issues/1491\n          arrow = \"\\\\long\"+arrow;\n          if (b6.rd) { arrow = \"\\\\overset{\"+b6.rd+\"}{\"+arrow+\"}\"; }\n          if (b6.rq) { arrow = \"\\\\underset{\\\\lower7mu{\"+b6.rq+\"}}{\"+arrow+\"}\"; }\n          arrow = \" {}\\\\mathrel{\"+arrow+\"}{} \";\n        } else {\n          if (b6.rq) { arrow += \"[{\"+b6.rq+\"}]\"; }\n          arrow += \"{\"+b6.rd+\"}\";\n          arrow = \" {}\\\\mathrel{\\\\x\"+arrow+\"}{} \";\n        }\n      } else {\n        arrow = \" {}\\\\mathrel{\\\\long\"+arrow+\"}{} \";\n      }\n      res = arrow;\n      break;\n    case 'operator':\n      res = texify._getOperator(buf.kind_);\n      break;\n    case '1st-level escape':\n      res = buf.p1+\" \";  // &, \\\\\\\\, \\\\hlin\n      break;\n    case 'space':\n      res = \" \";\n      break;\n    case 'entitySkip':\n      res = \"~\";\n      break;\n    case 'pu-space-1':\n      res = \"~\";\n      break;\n    case 'pu-space-2':\n      res = \"\\\\mkern3mu \";\n      break;\n    case '1000 separator':\n      res = \"\\\\mkern2mu \";\n      break;\n    case 'commaDecimal':\n      res = \"{,}\";\n      break;\n    case 'comma enumeration L':\n      res = \"{\"+buf.p1+\"}\\\\mkern6mu \";\n      break;\n    case 'comma enumeration M':\n      res = \"{\"+buf.p1+\"}\\\\mkern3mu \";\n      break;\n    case 'comma enumeration S':\n      res = \"{\"+buf.p1+\"}\\\\mkern1mu \";\n      break;\n    case 'hyphen':\n      res = \"\\\\text{-}\";\n      break;\n    case 'addition compound':\n      res = \"\\\\,{\\\\cdot}\\\\,\";\n      break;\n    case 'electron dot':\n      res = \"\\\\mkern1mu \\\\bullet\\\\mkern1mu \";\n      break;\n    case 'KV x':\n      res = \"{\\\\times}\";\n      break;\n    case 'prime':\n      res = \"\\\\prime \";\n      break;\n    case 'cdot':\n      res = \"\\\\cdot \";\n      break;\n    case 'tight cdot':\n      res = \"\\\\mkern1mu{\\\\cdot}\\\\mkern1mu \";\n      break;\n    case 'times':\n      res = \"\\\\times \";\n      break;\n    case 'circa':\n      res = \"{\\\\sim}\";\n      break;\n    case '^':\n      res = \"uparrow\";\n      break;\n    case 'v':\n      res = \"downarrow\";\n      break;\n    case 'ellipsis':\n      res = \"\\\\ldots \";\n      break;\n    case '/':\n      res = \"/\";\n      break;\n    case ' / ':\n      res = \"\\\\,/\\\\,\";\n      break;\n    default:\n      assertNever(buf);\n      throw [\"MhchemBugT\", \"mhchem bug T. Please report.\"];  // Missing texify rule or unknown MhchemParser output\n    }\n    assertString(res);\n    return res;\n  },\n  _getArrow: function (a) {\n    switch (a) {\n    case \"->\": return \"rightarrow\";\n    case \"\\u2192\": return \"rightarrow\";\n    case \"\\u27F6\": return \"rightarrow\";\n    case \"<-\": return \"leftarrow\";\n    case \"<->\": return \"leftrightarrow\";\n    case \"<-->\": return \"leftrightarrows\";\n    case \"<=>\": return \"rightleftharpoons\";\n    case \"\\u21CC\": return \"rightleftharpoons\";\n    case \"<=>>\": return \"Rightleftharpoons\";\n    case \"<<=>\": return \"Leftrightharpoons\";\n    default:\n      assertNever(a);\n      throw [\"MhchemBugT\", \"mhchem bug T. Please report.\"];\n    }\n  },\n  _getBond: function (a) {\n    switch (a) {\n    case \"-\": return \"{-}\";\n    case \"1\": return \"{-}\";\n    case \"=\": return \"{=}\";\n    case \"2\": return \"{=}\";\n    case \"#\": return \"{\\\\equiv}\";\n    case \"3\": return \"{\\\\equiv}\";\n    case \"~\": return \"{\\\\tripledash}\";\n    case \"~-\": return \"{\\\\rlap{\\\\lower.1em{-}}\\\\raise.1em{\\\\tripledash}}\";\n    case \"~=\": return \"{\\\\rlap{\\\\lower.2em{-}}\\\\rlap{\\\\raise.2em{\\\\tripledash}}-}\";\n    case \"~--\": return \"{\\\\rlap{\\\\lower.2em{-}}\\\\rlap{\\\\raise.2em{\\\\tripledash}}-}\";\n    case \"-~-\": return \"{\\\\rlap{\\\\lower.2em{-}}\\\\rlap{\\\\raise.2em{-}}\\\\tripledash}\";\n    case \"...\": return \"{{\\\\cdot}{\\\\cdot}{\\\\cdot}}\";\n    case \"....\": return \"{{\\\\cdot}{\\\\cdot}{\\\\cdot}{\\\\cdot}}\";\n    case \"->\": return \"{\\\\rightarrow}\";\n    case \"<-\": return \"{\\\\leftarrow}\";\n    case \"<\": return \"{<}\";\n    case \">\": return \"{>}\";\n    default:\n      assertNever(a);\n      throw [\"MhchemBugT\", \"mhchem bug T. Please report.\"];\n    }\n  },\n  _getOperator: function (a) {\n    switch (a) {\n    case \"+\": return \" {}+{} \";\n    case \"-\": return \" {}-{} \";\n    case \"=\": return \" {}={} \";\n    case \"<\": return \" {}<{} \";\n    case \">\": return \" {}>{} \";\n    case \"<<\": return \" {}\\\\ll{} \";\n    case \">>\": return \" {}\\\\gg{} \";\n    case \"\\\\pm\": return \" {}\\\\pm{} \";\n    case \"\\\\approx\": return \" {}\\\\approx{} \";\n    case \"$\\\\approx$\": return \" {}\\\\approx{} \";\n    case \"v\": return \" \\\\downarrow{} \";\n    case \"(v)\": return \" \\\\downarrow{} \";\n    case \"^\": return \" \\\\uparrow{} \";\n    case \"(^)\": return \" \\\\uparrow{} \";\n    default:\n      assertNever(a);\n      throw [\"MhchemBugT\", \"mhchem bug T. Please report.\"];\n    }\n  }\n};\n\n//\n// Helpers for code anaylsis\n// Will show type error at calling position\n//\n/** @param {number} a */\nfunction assertNever(a) {}\n/** @param {string} a */\nfunction assertString(a) {}\n\nexports.mhchemParser = mhchemParser;\nexports.texify = texify;\nexports.assertNever = assertNever;\nexports.assertString = assertString;\n","import {combineWithMathJax} from '../../../../../../../js/components/global.js';\n\nimport * as module1 from '../../../../../../../js/input/tex/mhchem/MhchemConfiguration.js';\n\ncombineWithMathJax({_: {\n    input: {\n        tex: {\n            mhchem: {\n                MhchemConfiguration: module1\n            }\n        }\n    }\n}});\n"],"sourceRoot":""}